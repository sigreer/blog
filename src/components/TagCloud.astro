---
import { hashStringToColor } from '../utils/colorUtils';

export interface TagCloudProps {
  tagCounts: Record<string, number>;
}

const { tagCounts } = Astro.props as TagCloudProps;

// Sort tags by count in descending order
const sortedTags = Object.entries(tagCounts).sort((a, b) => b[1] - a[1]) as [string, number][];

// Calculate the maximum count for scaling
const maxCount = Math.max(...Object.values(tagCounts) as number[]);

// Helper function to calculate font size
const calculateFontSize = (count: number) => {
  return 0.75 + (count / maxCount) * 0.75;
};
---

<section>
  <h2 class="mb-2 text-xl md:mb-4 md:text-2xl lg:text-3xl font-bold">Tag Cloud</h2>
  <div class="flex flex-wrap gap-2 tag-block">
    {
      sortedTags.map(([tag, count]) => (
        <a
          href={`/blog?tag=${encodeURIComponent(tag)}`}
          class="inline-block rounded-md px-2 py-1 text-xs md:text-base lg:text-lg font-semibold text-white tag-style transition-all hover:opacity-80 relative"
          data-tag={tag}
          style={`background-color: ${hashStringToColor(tag)};`}
        >
          {tag}
          <span class="ml-1 px-1 rounded bg-black bg-opacity-20">
            {count}
          </span>
        </a>
      ))
    }
  </div>
</section>